class e{constructor(){this._state=document.getElementById("readlist-state"),this._markedBooksContainer=document.getElementById("to-read-marked"),this._unmarkedBooksContainer=document.getElementById("to-read-unmarked");const{unmarkedBooks:e,markedBooks:t}=this.getLocalStorageData();this._unmarkedBooks=e,this._markedBooks=t,this.initRender(),window.onbeforeunload=this.saveBooks.bind(this)}saveBooks(){localStorage.clear(),localStorage.setItem("booksInfo",JSON.stringify({unmarkedBooks:this._unmarkedBooks,markedBooks:this._markedBooks}))}initRender(){this.setState(),this._unmarkedBooks.forEach((e=>this.renderUnmarkedBook(e))),this._markedBooks.forEach((e=>this.renderMarkedBook(e)))}setState(){this._state.innerHTML=`<div class="right-column-header-state" id="readlist-state">\n                                    ${this._unmarkedBooks.length+this._markedBooks.length} books, ${this._markedBooks.length} read\n                                 </div>`}renderMarkedBook(e){const t=document.createElement("div");t.setAttribute("class","right-column-list-holder__elem marked"),t.setAttribute("id",e.key),t.innerHTML=`<div class="right-column-list-holder__elem-title">${e.title}</div>\n                            <div class="right-column-list-holder__elem-subtitle">${void 0!==e.subtitle?e.subtitle:"no subtitle"}</div>\n                            <div class="right-column-list-holder__elem-author">${void 0!==e.author_name[0]?e.author_name[0]:"no info about author"}</div>\n                            <div class="right-column-list-holder__elem-actions">\n                                <button class="right-column-list-holder__elem-actions__button" data-action="unmark">Unmark</button>\n                                <button class="right-column-list-holder__elem-actions__button" data-action="remove">Remove from list</button>\n                            </div>`,this._markedBooksContainer.appendChild(t);document.getElementById(e.key).addEventListener("click",this.processAction.bind(this))}renderUnmarkedBook(e){const t=document.createElement("div");t.setAttribute("class","right-column-list-holder__elem"),t.setAttribute("id",e.key),t.innerHTML=`<div class="right-column-list-holder__elem-title">${e.title}</div>\n                            <div class="right-column-list-holder__elem-subtitle">${void 0!==e.subtitle?e.subtitle:"no subtitle"}</div>\n                            <div class="right-column-list-holder__elem-author">${void 0!==e.author_name&&void 0!==e.author_name[0]?e.author_name[0]:"no info about author"}</div>\n                            <div class="right-column-list-holder__elem-actions">\n                                <button class="right-column-list-holder__elem-actions__button" data-action="mark">Mark as read</button>\n                                <button class="right-column-list-holder__elem-actions__button" data-action="remove">Remove from list</button>\n                            </div>`,this._unmarkedBooksContainer.appendChild(t);document.getElementById(e.key).addEventListener("click",this.processAction.bind(this))}isInStorage(e){return this._unmarkedBooks.concat(this._markedBooks).some((t=>t.key===e))}removeBook(e){if(e.classList.contains("marked")){const t=this._markedBooks.findIndex((t=>t.key===e.id));this._markedBooks.splice(t,1)}else{const t=this._unmarkedBooks.findIndex((t=>t.key===e.id));this._unmarkedBooks.splice(t,1)}e.remove(),this.setState()}markBook(e,{target:t}){e.classList.add("marked"),t.innerText="Unmark",t.dataset.action="unmark";const s=this._unmarkedBooks.findIndex((t=>t.key===e.id));this._markedBooks.push(this._unmarkedBooks[s]),this._unmarkedBooks.splice(s,1),this._markedBooksContainer.insertAdjacentElement("beforeend",e)}unmarkBook(e,{target:t}){e.classList.remove("marked"),t.innerText="Mark as read",t.dataset.action="mark";const s=this._markedBooks.findIndex((t=>t.key===e.id));this._unmarkedBooks.push(this._markedBooks[s]),this._markedBooks.splice(s,1),this._unmarkedBooksContainer.insertAdjacentElement("beforeend",e)}processAction(e){if("BUTTON"===e.target.nodeName){const t=e.target.parentNode.parentNode;"mark"===e.target.dataset.action||"unmark"===e.target.dataset.action?"mark"===e.target.dataset.action?this.markBook(t,e):this.unmarkBook(t,e):this.removeBook(t),this.setState()}}addBook(e){let t=!1;return this.isInStorage(e.key)||(t=!0,this._unmarkedBooks.push(e),this.renderUnmarkedBook(e),this.setState()),t}getLocalStorageData(){let e,t=localStorage.getItem("booksInfo");if(null===t||"[]"===t)localStorage.setItem("booksInfo",JSON.stringify({unmarkedBooks:[],markedBooks:[]})),e={unmarkedBooks:[],markedBooks:[]};else try{e=JSON.parse(localStorage.getItem("booksInfo"))}catch(e){console.log(`localStorage JSON parse error: ${e.message}`)}return e}}class t{constructor(){this._infoContainer=document.getElementById("book-info-holder"),this._storage=new e,this._currentBook=null,this._messageContainer=document.getElementById("error-message")}showInfo(e){this._messageContainer.style.display="none",this._infoContainer.innerHTML=`<h2 class="center-column-holder-title>">${e.title}</h2>\n                    <div class="center-column-holder-subtitle">${void 0!==e.subtitle?e.subtitle:""}</div>\n                    <div class="center-column-holder-info">\n                        <div class="center-column-holder-info_langs">Languages available: ${void 0!==e.language?e.language.join(", "):"no information"}</div>\n                        <div class="center-column-holder-info_full-text">Full text available: ${e.has_fulltext?"yes":"no"}</div>\n                        <div class="center-column-holder-info_first-publish">First publish year: ${void 0!==e.first_publish_year?e.first_publish_year:"no information"}</div>\n                        <div class="center-column-holder-info_years-published">Year published: ${void 0!==e.publish_year?e.publish_year.join(", "):"no information"}</div>\n                    </div>\n                    <button class="center-column-holder-button" id="add-book">Add book to Read List</button>`,this._currentBook=e;document.getElementById("add-book").addEventListener("click",(()=>{this._storage.addBook(this._currentBook)||this.showMessageError()}))}showMessageError(){"block"!==this._messageContainer.style.display&&(this._messageContainer.style.display="block",setTimeout((()=>{this._messageContainer.style.display="none"}),5e3))}}new class{constructor(e){this._api=e,this._searchInput=document.getElementById("search-input"),this._booksList=document.getElementById("books-list"),this._resultsInfo=document.getElementById("results-info"),this._loadingMessage=document.getElementById("loading-message"),this._resultContainer=document.getElementById("result-container"),this._infoUI=new t,this._results=[],this._numFound=0,this._fetchBlock=!1,this._selectedPage=null,this._searchInput.value="",this._currentPage=0,this._currentRequest="",this._debounceTimeoutID=null,this._booksList.addEventListener("click",(e=>{e.target.classList.contains("left-column-result-wrapper-results__elem")&&(this._infoUI.showInfo(this._results[e.target.dataset.elemId]),this.selectItem(e.target))})),this._searchInput.addEventListener("input",(e=>{this._searchInput.value.length>=3&&(this._debounceTimeoutID&&(this._api.stopFetch(),clearTimeout(this._debounceTimeoutID)),this._debounceTimeoutID=setTimeout((()=>{this._debounceTimeoutID=null,this.processSearch(e)}),500))})),this._resultContainer.addEventListener("scroll",(()=>{!this._fetchBlock&&this._resultContainer.scrollTop+this._resultContainer.clientHeight+6e3>this._resultContainer.scrollHeight&&this.loadData()}))}processSearch(e){e.preventDefault(),this._currentRequest!==this._searchInput.value&&""!==this._searchInput.value&&(this._results=[],this._booksList.innerHTML="",this._currentRequest=this._searchInput.value,this.loadData())}loadData(){this.showLoadingMessage(),this._fetchBlock=!0,this._api.search(this._currentRequest,this._currentPage+1).then((e=>{this._results=this._results.concat(e.docs),this._numFound=e.numFound,this._currentPage++,this.renderSearchResult(e.docs),this._results.length<e.numFound&&(this._fetchBlock=!1),this.hideLoadingMessage()}),(e=>{this.processSearchError(e),this.hideLoadingMessage()}))}renderSearchResult(e){this._booksList.innerHTML+=this.makeSearchResult(e),this._resultsInfo.innerHTML=this.makeStats()}makeStats(){return`<span class="left-column-results-bottom-info_elem">\n                    Found: ${this._numFound}\n               </span>\n               <span class="left-column-results-bottom-info_elem">\n                   Loaded: ${this._results.length}\n               </span>`}makeSearchResult(e){let t="";return 0!==e.length?e.forEach(((e,s)=>{t+=`<div class="left-column-result-wrapper-results__elem" data-elem-id = "${s+100*(this._currentPage-1)}">\n                        ${e.title} (${void 0===e.language?"no info":e.language.join(", ")})\n                        </div>`})):t='<div class="left-column-result-wrapper-results__error">Nothing found!</div>',t}processSearchError(e){console.log(e)}selectItem(e){this._selectedPage&&this._selectedPage.classList.remove("left-column-result-wrapper__elem_selected"),e.classList.add("left-column-result-wrapper__elem_selected"),this._selectedPage=e}showLoadingMessage(){this._loadingMessage.style.display="block"}hideLoadingMessage(){this._loadingMessage.style.display="none"}}(new class{constructor(){this.controller=null}async search(e,t){const s=`https://openlibrary.org/search.json?q=${e}&page=${t}`;console.log(`fetch url: ${s}`),this.controller=new AbortController;const o=await fetch(s,{signal:this.controller.signal});return await o.json()}stopFetch(){this.controller&&this.controller.abort()}});
//# sourceMappingURL=index.ff913026.js.map
